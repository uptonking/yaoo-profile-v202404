import{_ as s,c as i,o as e,a7 as a}from"./chunks/framework.CueMD8Uh.js";const u=JSON.parse('{"title":"Autocomplete utilities","description":"Autocomplete utilities for UnoCSS (@unocss/autocomplete).","frontmatter":{"title":"Autocomplete utilities","description":"Autocomplete utilities for UnoCSS (@unocss/autocomplete)."},"headers":[],"relativePath":"tools/autocomplete.md","filePath":"tools/autocomplete.md","lastUpdated":1704118741000}'),t={name:"tools/autocomplete.md"},l=a(`<h1 id="autocomplete" tabindex="-1">Autocomplete <a class="header-anchor" href="#autocomplete" aria-label="Permalink to &quot;Autocomplete&quot;">​</a></h1><p>Autocomplete utilities for UnoCSS: <code>@unocss/autocomplete</code>. This is embedded in the <a href="/play" target="_blank" rel="noreferrer">playground</a> and the <a href="/yaoo-showcase-profile-v202404/integrations/vscode">VS Code extension</a>.</p><h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h2><h3 id="static-rules" tabindex="-1">Static rules <a class="header-anchor" href="#static-rules" aria-label="Permalink to &quot;Static rules&quot;">​</a></h3><p>Static rules like this will just work without any configuration.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;" tabindex="0"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">rules</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> [</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">  [</span><span style="--shiki-light:#B5695999;--shiki-dark:#C98A7D99;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">flex</span><span style="--shiki-light:#B5695999;--shiki-dark:#C98A7D99;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> { </span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">display</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">: </span><span style="--shiki-light:#B5695999;--shiki-dark:#C98A7D99;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">flex</span><span style="--shiki-light:#B5695999;--shiki-dark:#C98A7D99;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> }]</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">]</span></span></code></pre></div><h3 id="dynamic-rules" tabindex="-1">Dynamic rules <a class="header-anchor" href="#dynamic-rules" aria-label="Permalink to &quot;Dynamic rules&quot;">​</a></h3><p>For dynamic rules, you can provide an extra <code>meta</code> object to the rule and specify the autocomplete template.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;" tabindex="0"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">rules</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> [</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">  [</span></span>
<span class="line"><span style="--shiki-light:#B5695999;--shiki-dark:#C98A7D99;">    /</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">^</span><span style="--shiki-light:#AB5E3F;--shiki-dark:#C4704F;">m-</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">\\d</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">$</span><span style="--shiki-light:#B5695999;--shiki-dark:#C98A7D99;">/</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    ([,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> d</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">])</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =&gt;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> ({ </span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">margin</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">: </span><span style="--shiki-light:#B5695999;--shiki-dark:#C98A7D99;">\`</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">\${</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">d </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">/</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 4</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">rem</span><span style="--shiki-light:#B5695999;--shiki-dark:#C98A7D99;">\`</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> }),</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    { </span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">autocomplete</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">: </span><span style="--shiki-light:#B5695999;--shiki-dark:#C98A7D99;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">m-&lt;num&gt;</span><span style="--shiki-light:#B5695999;--shiki-dark:#C98A7D99;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> },</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> // &lt;-- this</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">  ],</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">]</span></span></code></pre></div><p>The template uses a simple DSL to specify the autocomplete suggestions. The syntax is:</p><ul><li><code>(...|...)</code>: logic OR groups using <code>|</code> as the separator. It will be used as suggestions when some of the groups match.</li><li><code>&lt;...&gt;</code>: built-in shorthands. Currently supports <code>&lt;num&gt;</code>, <code>&lt;percent&gt;</code> and <code>&lt;directions&gt;</code></li><li><code>$...</code>: theme inferring. For example <code>$colors</code> will list all the properties of the <code>colors</code> object of the theme.</li></ul><h2 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples&quot;">​</a></h2><h3 id="example-1" tabindex="-1">Example 1 <a class="header-anchor" href="#example-1" aria-label="Permalink to &quot;Example 1&quot;">​</a></h3><ul><li><strong>Template</strong>: <code>(border|b)-(solid|dashed|dotted|double|hidden|none)</code></li><li><strong>Input</strong>: <code>b-do</code></li><li><strong>Suggestions</strong>: <code>b-dotted</code>, <code>b-double</code></li></ul><h3 id="example-2" tabindex="-1">Example 2 <a class="header-anchor" href="#example-2" aria-label="Permalink to &quot;Example 2&quot;">​</a></h3><ul><li><strong>Template</strong>: <code>m-&lt;num&gt;</code></li><li><strong>Input</strong>: <code>m-</code></li><li><strong>Suggestions</strong>: <code>m-1</code>, <code>m-2</code>, <code>m-3</code>…</li></ul><h3 id="example-3" tabindex="-1">Example 3 <a class="header-anchor" href="#example-3" aria-label="Permalink to &quot;Example 3&quot;">​</a></h3><ul><li><strong>Template</strong>: <code>text-$colors</code></li><li><strong>Input</strong>: <code>text-r</code></li><li><strong>Suggestions</strong>: <code>text-red</code>, <code>text-rose</code>…</li></ul><h3 id="example-4" tabindex="-1">Example 4 <a class="header-anchor" href="#example-4" aria-label="Permalink to &quot;Example 4&quot;">​</a></h3><p>For multiple templates:</p><ul><li><strong>Template</strong>: <code>[&#39;(border|b)-&lt;num&gt;&#39;, &#39;(border|b)-&lt;directions&gt;-&lt;num&gt;&#39;]</code></li><li><strong>Input</strong>: <code>b-</code></li><li><strong>Suggestions</strong>: <code>b-x</code>, <code>b-y</code>, <code>b-1</code>, <code>b-2</code>…</li><li><strong>Input</strong>: <code>b-x-</code></li><li><strong>Suggestions</strong>: <code>b-x-1</code>, <code>b-x-2</code>…</li></ul><h2 id="license" tabindex="-1">License <a class="header-anchor" href="#license" aria-label="Permalink to &quot;License&quot;">​</a></h2><ul><li>MIT License © 2021-PRESENT <a href="https://github.com/antfu" target="_blank" rel="noreferrer">Anthony Fu</a></li></ul>`,23),n=[l];function o(h,p,r,d,k,c){return e(),i("div",null,n)}const m=s(t,[["render",o]]);export{u as __pageData,m as default};
